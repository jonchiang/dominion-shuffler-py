"""Picks 10 random cards from the Dominion base game.
"""
import getopt
import random
import re
import sys

def sanitize_required(cards, required):
  """Verify that the 'required' set contains valid cards.

  Arguments:
  cards -- The set of cards.
  required -- Set of cards that must be included in the drawn set.
  """
  if len(required) != len(required & cards):
    invalid = required - cards
    print 'Required set contains at least one invalid card: %s' % ', '.join(invalid)
    sys.exit()

def draw(cards, required):
  """Draw 10 cards at random.  The drawn set
  must include the set of required cards.

  Arguments:
  cards -- The set of cards to draw from.
  required -- The required set of cards.
  """
  drawn = set(required)
  cards = cards - required  # Remove the required cards from the deck.

  num_to_draw = 10 - len(drawn)
  return drawn | set(random.sample(cards, num_to_draw))

def print_cards(cards):
  """Print the cards.

  Arguments:
  cards -- The set of cards.
  """
  n = len(cards)
  for idx, v in zip(range(1, n+1), sorted(cards)):
    print '%d. %s' % (idx, v)

def usage():
  print 'Usage: python dominion-shuffle'
  print 'python dominion-shuffle --require throne,witch'

if __name__ == '__main__':
  try:
    opts, args = getopt.getopt(sys.argv[1:], 'hr:', ['require=', 'help'])

    required = set()
    for o, a in opts:
      if o in ('r', '--require'):
        required = set(re.compile('\s*,\s*').split(a))
      elif o in ('-h', '--help'):
        usage()
        sys.exit()


    cards = set('adventurer bureaucrat cellar chancellor chapel council-room feast festival laboratory library market militia mine moat money-lender remodel smithy spy thief throne-room village witch woodcutter workshop gardens'.split(' '))

    sanitize_required(cards, required)
    drawn = draw(cards, required)
    print_cards(drawn)
  except getopt.GetoptError, err:
    print str(err)
